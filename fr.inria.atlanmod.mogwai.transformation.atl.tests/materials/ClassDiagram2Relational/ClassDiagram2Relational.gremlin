final def gr = g;
final def helper = gHelper;

def metaClass = g.getIndex("metaclasses",Vertex.class)[[name:"Class"]];
def metaClassNode = (metaClass.hasNext() ? metaClass.next() : null);

def metaTable = g.getIndex("metaclasses",Vertex.class)[[name:"Table"]];
def metaTableNode = metaTable.hasNext() ? metaTable.next() : helper.createMetaclass("Table", "ClassDiagram");

println(metaTableNode);

metaClassNode.inE("kyanosInstanceOf").outV.transform{
	def c = it;
	def out = gr.addVertex();
	gr.addEdge(out, metaTableNode, "kyanosInstanceOf");
	gr.addEdge(gr.getVertex('ROOT'), out, "eContents");
	out.setProperty("name", c.getProperty("name"));
	println(out);
	out;
}
